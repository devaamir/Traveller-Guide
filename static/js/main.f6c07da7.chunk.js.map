{"version":3,"sources":["components/assets/images/place.svg","components/assets/images/logo.svg","components/screens/includes/Nav.js","components/screens/Main.js","components/screens/Place.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","Header","Logo","to","LogoImg","src","require","default","alt","Login","styled","div","h1","img","a","Main","useState","places","setPlaces","useEffect","axios","get","then","response","data","catch","error","console","log","MainSection","Helmet","charSet","rel","href","Heading","Short","PlacesList","map","place","ListItems","id","style","textDecoration","PlaceImg","image","name","PlaceName","Location","LocIcon","location","section","h2","h4","ul","li","p","Place","match","setPlace","subimages","setSubimgs","params","gallery","Section","JustDIv","Category","category_name","Left","MainImg","Right","subimage","SubImg","Discrip","Details","description","span","h3","App","className","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6c07da7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/place.7d64241c.svg\";","export default __webpack_public_path__ + \"static/media/logo.5c4eda44.svg\";","import React from 'react';\nimport styled from 'styled-components';\nimport {Link} from 'react-router-dom';\n\nexport default function Nav() {\n    return (\n        <Header>\n            <Logo>\n                <Link to='/Traveller-Guide'>\n                <LogoImg src={require('../../assets/images/logo.svg').default} alt=\"logo\" />\n                </Link>\n            </Logo>\n            <Login src=\"#\">Login</Login>\n        </Header>\n    )\n}\n\nconst Header = styled.div`\n    height: 120px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n\nconst Logo = styled.h1``;\n\nconst LogoImg = styled.img``;\n\nconst Login = styled.a`\n    background: #005BE9;\n    padding: 16px 48px;\n    color: #fff;\n    font-weight: bold;\n    border-radius: 5px;\n    font-size: 18px;\n`;","import React, {useState,useEffect} from 'react'\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport {Helmet} from \"react-helmet\";\n\nexport default function Main() {\n\n    const [places,setPlaces] = useState([]);\n\n    useEffect(() => {\n            axios\n            .get('https://traveller.talrop.works/api/v1/places/')\n            .then(function (response) {\n                setPlaces(response.data.data);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }, []);\n\n    return (\n        <MainSection>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Moke. | Traveller Guide</title>\n                <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n            </Helmet>\n            <Heading>Welcome</Heading>\n            <Short>Explore The World Around You</Short>\n            <PlacesList>\n                {places.map((place) => (\n                    <ListItems key={place.id}>\n                        <Link to={`/place/${place.id}`} style={{textDecoration: 'none'}}>\n                            <PlaceImg src={place.image} alt={place.name} />\n                            <PlaceName>{place.name}</PlaceName>\n                            <Location><LocIcon src={require('../assets/images/place.svg').default} alt={place.location} />{place.location}</Location>\n                        </Link>\n                    </ListItems>\n                ))}\n            </PlacesList>\n        </MainSection>\n    )\n}\n\nconst MainSection = styled.section`\n    padding: 100px 0; \n`;\n\nconst Heading = styled.h2`\n    font-size: 42px;\n    @media screen and (max-width: 768px) {\n        font-size: 36px;\n    }\n`;\n\nconst Short = styled.h4`\n    font-size: 24px;\n    padding: 20px 0;\n    font-weight: 400;\n    color: #C9C8C9;\n`;\n\nconst PlacesList = styled.ul`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-gap: 20px;\n    @media screen and (max-width: 1280px) {\n        grid-template-columns: 1fr 1fr 1fr;\n    }\n    @media screen and (max-width: 768px) {\n        grid-template-columns: 1fr 1fr;\n    }\n    @media screen and (max-width: 568px) {\n        grid-template-columns: 1fr;\n    }\n`;\n\nconst ListItems = styled.li`\n    cursor: pointer;\n    border-radius: 5px;\n    overflow:hidden;\n    &:hover {\n        box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, .2);\n    }\n`;\n\nconst PlaceImg = styled.img`\n    width: 100%;\n`;\n\nconst PlaceName = styled.h4`\n    font-size: 16px;\n    padding: 10px;\n`;\n\nconst Location = styled.p`\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n    padding: 0 10px 10px;\n`;\n\nconst LocIcon = styled.img`\n    margin-right: 5px;\n    height: 100%;\n`;","import React, {useState,useEffect} from 'react'\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport {Helmet} from \"react-helmet\";\n\nexport default function Place({match}) {\n\n    const [place,setPlace] = useState([]);\n    const [subimages,setSubimgs] = useState([]);\n\n    useEffect(() => {\n            axios\n            .get(`https://traveller.talrop.works/api/v1/places/view/${match.params.id}`)\n            .then(function (response) {\n                setPlace(response.data.data);\n                setSubimgs(response.data.data.gallery)\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }, []);\n\n\n    return (\n        <Section>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>{place.name}</title>\n                <link rel=\"canonical\" href=\"http://mysite.com/example\" />\n            </Helmet>\n            <PlaceName>{place.name}</PlaceName>\n            <JustDIv>\n                <Category>{place.category_name}</Category>\n                <Location><LocIcon src={require('../assets/images/place.svg').default} alt={place.location} />{place.location}</Location>\n            </JustDIv>\n            <Main>\n                <Left>\n                    <MainImg src={place.image} alt={place.image} />\n                </Left>\n                <Right>\n                    {subimages.map((subimage) =>(\n                    <SubImg key={subimage.id} src={subimage.image} alt={subimage.image} />\n                    ))}\n                </Right>\n            </Main>\n            <Discrip>\n                <Heading>Place Details</Heading>\n                <Details>{place.description}</Details>\n            </Discrip>\n        </Section>\n    )\n}\n\nconst Section = styled.section`\n    width: 90%;\n    margin: 0 auto;\n    padding: 100px 0;\n`;\n\nconst PlaceName = styled.h1`\n        font-size: 42px;\n        @media screen and (max-width: 1024px) {\n            font-size: 36px;\n        }\n`;\n\nconst JustDIv = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 20px 0; \n`;\n\nconst Category = styled.span`\n    padding: 8px 16px;\n    border-radius: 30px;\n    border: 1px solid #000;\n    margin-right: 10px;\n`;\n\nconst Location = styled.p`\n    display: flex;\n    align-items: center;\n    font-size: 16px;\n    font-weight: 500;\n`;\n\nconst LocIcon = styled.img`\n    margin-right: 5px;\n`;\n\nconst Main = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    border-radius: 10px;\n    overflow: hidden;\n    @media screen and (max-width: 1024px) {\n        grid-template-columns: 1fr;\n        grid-gap: 20px;\n    }\n`;\n\nconst Left = styled.div`\n    margin-right: 20px;\n    @media screen and (max-width: 1024px) {\n        margin-right: 0;\n    }\n`;\n\nconst MainImg = styled.img`\n    width: 100%;\n    height: 100%;\n`;\n\nconst Right = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 20px;\n`;\n\nconst SubImg = styled.img`\n    width: 100%;\n`;\n\nconst Discrip = styled.div`\n    padding:  30px 0;\n`;\n\nconst Heading = styled.h3`\n    font-size: 28px;\n    padding-bottom: 20px;\n`;\n\nconst Details = styled.p`\n    line-height: 1.5em;\n`;","import './App.css';\nimport Nav from './components/screens/includes/Nav';\nimport Main from './components/screens/Main';\nimport Place from './components/screens/Place';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router> \n      <>\n        <section className='wrapper'>\n              <Nav />\n              <div>Hi How Are You</div>\n              <Switch>\n                  <Route path='/Traveller-Guide' exact component={Main} />\n                  <Route path=\"/place/:id\" component={Place} />\n              </Switch>\n        </section>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}